#!/bin/sh
set -eu
umask 077

usage() {
  printf 'Usage:\n' >&2
  printf '  %s {add|update} [-n|--stdin] <name>\n' "${0##*/}" >&2
  printf '  %s {get|delete} <name>\n' "${0##*/}" >&2
  printf '  %s get-secret <name> <pid>\n' "${0##*/}" >&2
  exit 2
}

warn() {
  printf '%s\n' "$*" >&2
}

pass_git_pull() {
  if ! pass git pull --rebase >/dev/null 2>&1; then
    warn 'warning: pass git pull failed; run "pass git pull --rebase"'
  fi
}

pass_git_push() {
  if ! pass git push >/dev/null 2>&1; then
    warn 'warning: pass git push failed; run "pass git push"'
  fi
}

cmd=${1:-}
[ -n "${cmd:-}" ] || usage

force_stdin=0
case "$cmd" in
  add|update)
    shift
    case "${1:-}" in
      -n|--stdin) force_stdin=1; shift ;;
    esac
    name=${1:-}
    [ -n "$name" ] || usage
    ;;
  get|delete)
    shift
    name=${1:-}
    [ -n "$name" ] || usage
    ;;
  get-secret)
    shift
    name=${1:-}
    pid=${2:-}
    [ -n "$name" ] && [ -n "$pid" ] || usage
    case "$pid" in ''|*[!0-9]*)
      warn 'error: pid must be numeric'; exit 2;;
    esac
    ;;
  *) usage ;;
esac

: "${PASSWORD_STORE_DIR:=$HOME/git/secrets}"
export PASSWORD_STORE_DIR

service="kc/${name}"

: "${TMPDIR:=/tmp}"

case "$cmd" in
  add)
    pass_git_pull
    if [ "$force_stdin" -eq 1 ] || ! [ -t 0 ]; then
      pass insert -m "$service" >/dev/null
    else
      pass insert "$service" >/dev/null
    fi
    pass_git_push
    ;;

  update)
    pass_git_pull
    if [ "$force_stdin" -eq 1 ] || ! [ -t 0 ]; then
      pass insert -fm "$service" >/dev/null
    else
      pass insert -f "$service" >/dev/null
    fi
    pass_git_push
    ;;

  get)
    pass_git_pull
    pass show "$service" | head -n1
    ;;

  get-secret)
    pass_git_pull
    tmp="$(mktemp "${TMPDIR%/}/XXXXXXXX")"
    chmod 600 "$tmp"
    if ! pass show "$service" >"$tmp"; then
      rm -f "$tmp"; exit 1
    fi
    MON_PID=$pid MON_FILE=$tmp nohup sh -c '
      start="$(ps -o lstart= -p "$MON_PID" 2>/dev/null)"
      while :; do
        cur="$(ps -o lstart= -p "$MON_PID" 2>/dev/null)" || break
        [ "$cur" = "$start" ] || break
        sleep 1
      done
      rm -f -- "$MON_FILE"
    ' >/dev/null 2>&1 &
    printf '%s\n' "$tmp"
    ;;

  delete)
    pass_git_pull
    pass rm -f "$service" >/dev/null 2>&1 || true
    pass_git_push
    ;;
esac
