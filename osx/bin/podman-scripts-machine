#!/bin/sh
# podman-scripts-machine â€” run Podman subcommands against a machine; builds and
# runs Containerfiles for the `run` subcommand. Pipe-friendly. By default, only
# the full Podman command is logged to stderr; pass `--verbose` for detailed
# debug logging.

set -eu
[ "${DEBUG:-}" ] && set -x

verbose=0
while [ $# -gt 0 ]; do
    case "$1" in
        --verbose)
            verbose=1
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            break
            ;;
    esac
done

log() {
    [ "$verbose" -eq 1 ] && printf '%s\n' "$*" >&2
}

run_with_sigint() {
    "$@" &
    pid=$!
    trap 'kill -s INT "$pid"' TERM
    wait $pid
    rc=$?
    trap - TERM
    return $rc
}

command -v podman >/dev/null 2>&1 || { echo "podman not found" >&2; exit 127; }
command -v awk >/dev/null 2>&1 || { echo "awk not found" >&2; exit 127; }

DR_MACHINE=${DR_MACHINE:-${MACHINE:-com.nashspence.scripts}}
DR_IMAGE_PREFIX=${DR_IMAGE_PREFIX:-com.nashspence.scripts.}
DR_TAG=${DR_TAG:-latest}

subcmd=run
if [ $# -gt 0 ] && [ "${1#-}" = "$1" ]; then
    subcmd=$1
    shift
fi

yaml_get_key() {
    key=$1
    file=$2
    awk -F': *' -v k="$key" '$1==k {print $2; exit}' "$file"
}

if [ "$subcmd" = run ]; then
    file=
    release=
    run_i=0
    while [ $# -gt 0 ]; do
        case "$1" in
            -f|--file)
                file=$2
                shift 2
                ;;
            -r|--release)
                release=$2
                shift 2
                ;;
            --)
                shift
                break
                ;;
            *)
                run_i=$((run_i + 1))
                eval "run_$run_i=\$1"
                shift
                ;;
        esac
    done

    cmd_i=0
    while [ $# -gt 0 ]; do
        cmd_i=$((cmd_i + 1))
        eval "cmd_$cmd_i=\$1"
        shift
    done

    if [ -z "$file" ] && [ -n "$release" ]; then
        file=$release
    fi

    if [ -z "$file" ] && [ -z "$release" ]; then
        set -- podman --connection "$DR_MACHINE" run
        i=1
        while [ $i -le $run_i ]; do
            eval "set -- \"\$@\" \"\$run_$i\""
            i=$((i + 1))
        done
        if [ $cmd_i -gt 0 ]; then
            set -- "$@" --
            i=1
            while [ $i -le $cmd_i ]; do
                eval "set -- \"\$@\" \"\$cmd_$i\""
                i=$((i + 1))
            done
        fi
        run_with_sigint "$@"
        exit $?
    fi

    [ -n "$file" ] && [ -d "$file" ] && file="$file/Containerfile"
    [ -f "$file" ] || { echo "file not found: $file" >&2; exit 1; }
    if [ -n "$release" ] && [ ! -f "$release" ]; then
        echo "file not found: $release" >&2
        exit 1
    fi

    build_needed=1
    image=""
    if [ -n "$release" ] && [ -z "${DR_NO_PULL:-}" ]; then
        rel_img=$(yaml_get_key image "$release")
        rel_ver=$(yaml_get_key version "$release")
        if [ -n "$rel_img" ] && [ -n "$rel_ver" ]; then
            rel_ref="$rel_img:$rel_ver"
            if run_with_sigint podman --connection "$DR_MACHINE" pull "$rel_ref" >/dev/null 2>&1; then
                image=$rel_ref
                build_needed=0
                log "Using release image: $rel_ref"
            else
                log "Pull failed for $rel_ref; falling back to build"
            fi
        fi
    fi

    if [ "$build_needed" -eq 1 ]; then
        dir=$(dirname "$file")
        name=$(basename "$dir")
        image="${DR_IMAGE_PREFIX}${name}:${DR_TAG}"
        if ! run_with_sigint podman --connection "$DR_MACHINE" build -q -f "$file" -t "$image" "$dir"; then
            echo "build failed for $image" >&2
            exit 1
        fi
        log "Built local image: $image"
    fi

    set -- podman --connection "$DR_MACHINE" run --rm
    i=1
    while [ $i -le $run_i ]; do
        eval "set -- \"\$@\" \"\$run_$i\""
        i=$((i + 1))
    done
    set -- "$@" "$image"
    if [ $cmd_i -gt 0 ]; then
        set -- "$@" --
        i=1
        while [ $i -le $cmd_i ]; do
            eval "set -- \"\$@\" \"\$cmd_$i\""
            i=$((i + 1))
        done
    fi
    run_with_sigint "$@"
    exit $?
fi

run_with_sigint podman --connection "$DR_MACHINE" "$subcmd" "$@"
