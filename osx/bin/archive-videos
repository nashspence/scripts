#!/bin/sh
# Pipeline driver: stage -> vcrunch -> ( mkiso & qcut ) -> burniso -> wait qcut
# Usage:
#   archive-videos /path/to/input                     # output: $PWD/$(date -u +%Y%m%dT%H%M%SZ)
#   archive-videos /path/to/input /custom/output/dir  # output: /custom/output/dir

set -eu
[ -n "${DEBUG:-}" ] && set -x

die() {
  printf '%s\n' "$*" >&2
  exit 2
}

kill_if_running() {
  pid=${1:-}
  [ -n "$pid" ] || return 0
  kill -0 "$pid" 2>/dev/null || return 0
  kill "$pid" 2>/dev/null || true
}

cleanup() {
  for p in "$@"; do
    kill_if_running "$p"
  done
  for p in "$@"; do
    [ -n "$p" ] && wait "$p" 2>/dev/null || true
  done
}

main() {
  input=${1:-}
  [ -n "$input" ] || die "No input file path provided"
  [ -r "$input" ] || die "Input not readable: $input"

  command -v caffeinate >/dev/null 2>&1 || die "caffeinate not found"
  command -v burniso    >/dev/null 2>&1 || die "burniso not found"
  command -v stage      >/dev/null 2>&1 || die "stage not found"
  command -v vcrunch    >/dev/null 2>&1 || die "vcrunch not found"
  command -v mkiso      >/dev/null 2>&1 || die "mkiso not found"
  command -v qcut       >/dev/null 2>&1 || die "qcut not found"
  command -v rpush      >/dev/null 2>&1 || die "rpush not found"

  now=$(date -u +%Y%m%dT%H%M%SZ)

  out=${2:-"$PWD/$now"}

  stage_out="$out/stage"
  vcrunch_out="$out/vcrunch"
  mkiso_out="$out/mkiso"
  qcut_out="$out/qcut"
  mkdir -p -- "$stage_out" "$vcrunch_out" "$mkiso_out" "$qcut_out"

  caffeinate -dims -w $$ &

  mkiso_pid=
  qcut_pid=
  trap 'cleanup "$mkiso_pid" "$qcut_pid"; exit 130' INT
  trap 'cleanup "$mkiso_pid" "$qcut_pid"; exit 143' TERM HUP QUIT

  stage   -v "${input}:/in"     -v "${stage_out}:/out"
  vcrunch -v "${stage_out}:/in" -v "${vcrunch_out}:/out"

  mkiso -v "${vcrunch_out}:/in" -v "${mkiso_out}:/out" -- --out-file "${now}.iso" &
  mkiso_pid=$!
  qcut  -v "${stage_out}:/in"   -v "${qcut_out}:/out" &
  qcut_pid=$!

  if ! wait "$mkiso_pid"; then
    rc=$?
    kill_if_running "$qcut_pid"
    wait "$qcut_pid" 2>/dev/null || true
    exit "$rc"
  fi

  if ! burniso -v "${mkiso_out}/${now}.iso"; then
    rc=$?
    kill_if_running "$qcut_pid"
    wait "$qcut_pid" 2>/dev/null || true
    exit "$rc"
  fi

  wait "$qcut_pid"

  rpush copy "${qcut_out}/" "smb://0819870.xyz/shared/family/daily/"
}

main "$@"
