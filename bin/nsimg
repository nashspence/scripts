#!/bin/sh
# nsimg â€” output the image reference for a container.
# Usage: nsimg name

set -eu
[ "${DEBUG:-}" ] && set -x

if [ "$#" -lt 1 ]; then
    echo "usage: nsimg name" >&2
    exit 2
fi

command -v use-scripts-machine >/dev/null 2>&1 || { echo "use-scripts-machine not found" >&2; exit 127; }

name=$(basename "$1")
repo_dir=${PODMAN_SCRIPTS_DIR:-}
[ -n "$repo_dir" ] || { echo "PODMAN_SCRIPTS_DIR not set" >&2; exit 1; }
dir="${repo_dir}/containers/${name}"
[ -d "$dir" ] || { echo "container directory not found: $name" >&2; exit 1; }

MACHINE=$(use-scripts-machine "$$")
IMAGE_PREFIX=${DR_IMAGE_PREFIX:-com.nashspence.scripts.}
TAG=${DR_TAG:-latest}

release_file="${dir}/release.yaml"
containerfile=""
for f in Containerfile Dockerfile; do
    if [ -f "${dir}/$f" ]; then
        containerfile="${dir}/$f"
        break
    fi
done

if [ -z "${DR_NO_PULL:-}" ] && [ -f "$release_file" ]; then
    rel_img=$(awk -F': *' '$1=="image"{print $2}' "$release_file")
    rel_ver=$(awk -F': *' '$1=="version"{print $2}' "$release_file")
    if [ -n "$rel_img" ] && [ -n "$rel_ver" ]; then
        ref="${rel_img}:${rel_ver}"
        if podman --connection "$MACHINE" pull "$ref" >/dev/null 2>&1; then
            printf '%s\n' "$ref"
            exit 0
        fi
    fi
fi

if [ -n "$containerfile" ]; then
    image="${IMAGE_PREFIX}${name}:${TAG}"
    if podman --connection "$MACHINE" build -q -f "$containerfile" -t "$image" "$dir" >/dev/null; then
        printf '%s\n' "$image"
        exit 0
    fi
    echo "build failed for $image" >&2
    exit 1
fi

echo "no image available for $name" >&2
exit 1
