name: release-on-file-change
on:
  push:
    branches: [ main ]
    paths:
      - 'portable/**/release.yaml'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.out.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Find changed services
        id: out
        env:
          BASE: ${{ github.event.before }}
        run: |
          BASE=${BASE:-HEAD^}
          CHANGED=$(git diff --name-only "$BASE" HEAD | grep -E 'portable/.+/release\.yaml' | cut -d/ -f2 || true)
          for F in portable/*/release.yaml; do
            S=$(cut -d/ -f2 <<<"$F")
            V=$(grep '^version:' "$F" | awk '{print $2}')
            if ! git rev-parse -q --verify "refs/tags/$S/$V" >/dev/null; then
              CHANGED="$CHANGED $S"
            fi
          done
          CHANGED=$(echo "$CHANGED" | tr ' ' '\n' | sort -u)
          printf '{"include":[' > m.json
          for S in $CHANGED; do
            printf '{"service":"%s"},' "$S" >> m.json
          done
          sed -i 's/,$//' m.json || true
          printf ']}' >> m.json
          echo "matrix=$(cat m.json)" >> $GITHUB_OUTPUT

  build:
    needs: plan
    if: ${{ needs.plan.outputs.matrix != '{"include":[]}' && needs.plan.outputs.matrix != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.plan.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.x' }
      - name: Install yq
        run: pip install yq
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Read release.yaml
        id: rel
        run: |
          FILE="portable/${{ matrix.service }}/release.yaml"
          IMAGE=$(yq -r '.image' "$FILE")
          VERSION=$(yq -r '.version' "$FILE")
          echo "image=$IMAGE"   >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Metadata (tags + labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.rel.outputs.image }}
          tags: |
            type=raw,value=${{ steps.rel.outputs.version }}
            type=raw,value=latest
            type=sha,prefix=

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: ./portable/${{ matrix.service }}
          file: ./portable/${{ matrix.service }}/Containerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.rel.outputs.version }}
            VCS_REF=${{ github.sha }}
            VCS_URL=${{ github.server_url }}/${{ github.repository }}

      - name: (Optional) create namespaced git tag
        if: ${{ !startsWith( steps.rel.outputs.version, '0.0.0' ) }}
        run: |
          git tag "${{ matrix.service }}/${{ steps.rel.outputs.version }}" || true
          git push origin "${{ matrix.service }}/${{ steps.rel.outputs.version }}" || true
