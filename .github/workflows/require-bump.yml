name: require-bump
on:
  pull_request:
    paths:
      - 'portable/**'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-python@v5
        with: { python-version: '3.x' }
      - name: Install yq
        run: pip install yq semver

      - name: Find touched services
        id: svc
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD \
            | cut -d/ -f2 \
            | sort -u \
            | grep -E '^[a-zA-Z0-9_-]+$' \
            | tr '\n' ' ' || true)
          echo "list=${CHANGED}" >> "$GITHUB_OUTPUT"

      - name: Verify bumps
        run: |
          set -e
          for SVC in ${{ steps.svc.outputs.list }}; do
            if git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -q "^portable/$SVC/" && \
               git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -vq "^portable/$SVC/release.yaml$"; then
              OLD=$(git show origin/${{ github.base_ref }}:portable/$SVC/release.yaml | yq -r '.version' || echo "")
              NEW=$(yq -r '.version' portable/$SVC/release.yaml || echo "")
              if [[ -z "$OLD" || -z "$NEW" ]]; then
                echo "Missing release.yaml for $SVC"; exit 1
              fi
              OLD=$OLD NEW=$NEW python - <<'PY'
                import os, sys
                from semver import VersionInfo
                old = os.environ["OLD"].lstrip('v')
                new = os.environ["NEW"].lstrip('v')
                if VersionInfo.parse(new) <= VersionInfo.parse(old):
                    print(f"Version not bumped: {new} <= {old}")
                    sys.exit(1)
                print(f"OK: {new} > {old}")
                PY
            fi
          done
